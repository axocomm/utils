#!/usr/bin/env ruby

require 'json'
require 'net/http'
require 'uri'
require 'thor'

USER_AGENT = 'Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5'

def get(url)
  url = URI.parse(url)
  req = Net::HTTP::Get.new(url)
  req.add_field('User-Agent', USER_AGENT)
  res = Net::HTTP.start(url.host, url.port) { |h| h.request(req) }
end

def top_posts_local
  File.open('out.json') { |f| JSON.parse(f.read) }
end

def top_posts(limit = -1)
  out = top_posts_local
  out['data']['children']
end

def parse_title(title)
  if m = /^\[([0-9\-]+)\] Challenge #(\d+) \[([A-Za-z]+)\] (.+)$/.match(title)
    {
      :date       => m[1],
      :number     => m[2],
      :difficulty => m[3],
      :title      => m[4]
    }
  end
end

def to_challenge(post)
  data = post['data']
  title = data['title']
  text = data['selftext_html']
  base = {
    :text  => text,
    :title => title
  }

  if meta = parse_title(title)
    base.merge!(meta)
  end

  base
end

def challenges(posts, params = {})
  cs = posts.map { |post| to_challenge(post) }
  params.inject(cs) do |acc, (k, v)|
    acc.select do |c|
      c[k].to_s == v.to_s
    end
  end
end

class DailyProgrammerCli < Thor
  package_name 'DailyProgrammerCli'

  desc 'latest DIFFICULTY', 'fetch the latest of the given optional difficulty'
  def latest(difficulty = nil)
    params = difficulty ? {:difficulty => difficulty} : {}
    puts challenges(top_posts, params).first.to_json
  end
end

DailyProgrammerCli.start
